; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\pdma.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\pdma.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\pdma.crf ..\..\..\Library\StdDriver\src\pdma.c]
                          THUMB

                          AREA ||i.PDMA_Close||, CODE, READONLY, ALIGN=1

                  PDMA_Close PROC
;;;58      */
;;;59     void PDMA_Close(PDMA_T * pdma)
000000  2100              MOVS     r1,#0
;;;60     {
;;;61         pdma->CHCTL = 0UL;
000002  f8c01400          STR      r1,[r0,#0x400]
;;;62     }
000006  4770              BX       lr
;;;63     
                          ENDP


                          AREA ||i.PDMA_DisableInt||, CODE, READONLY, ALIGN=1

                  PDMA_DisableInt PROC
;;;415     */
;;;416    void PDMA_DisableInt(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32Mask)
000000  2301              MOVS     r3,#1
;;;417    {
;;;418        switch(u32Mask)
;;;419        {
;;;420        case PDMA_INT_TRANS_DONE:
;;;421            pdma->INTEN &= ~(1ul << u32Ch);
000002  408b              LSLS     r3,r3,r1
000004  b14a              CBZ      r2,|L2.26|
000006  2a01              CMP      r2,#1                 ;418
000008  d00d              BEQ      |L2.38|
00000a  2a02              CMP      r2,#2                 ;418
00000c  d104              BNE      |L2.24|
;;;422            break;
;;;423        case PDMA_INT_TEMPTY:
;;;424            pdma->DSCT[u32Ch].CTL |= PDMA_DSCT_CTL_TBINTDIS_Msk;
;;;425            break;
;;;426        case PDMA_INT_TIMEOUT:
;;;427            pdma->TOUTIEN &= ~(1ul << u32Ch);
00000e  f8d01438          LDR      r1,[r0,#0x438]
000012  4399              BICS     r1,r1,r3
000014  f8c01438          STR      r1,[r0,#0x438]
                  |L2.24|
;;;428            break;
;;;429    
;;;430        default:
;;;431            break;
;;;432        }
;;;433    }
000018  4770              BX       lr
                  |L2.26|
00001a  f8d01418          LDR      r1,[r0,#0x418]        ;421
00001e  4399              BICS     r1,r1,r3              ;421
000020  f8c01418          STR      r1,[r0,#0x418]        ;421
000024  4770              BX       lr
                  |L2.38|
000026  eb001001          ADD      r0,r0,r1,LSL #4       ;424
00002a  6801              LDR      r1,[r0,#0]            ;424
00002c  f0410180          ORR      r1,r1,#0x80           ;424
000030  6001              STR      r1,[r0,#0]            ;424
000032  4770              BX       lr
;;;434    
                          ENDP


                          AREA ||i.PDMA_DisableTimeout||, CODE, READONLY, ALIGN=1

                  PDMA_DisableTimeout PROC
;;;316     */
;;;317    void PDMA_DisableTimeout(PDMA_T * pdma,uint32_t u32Mask)
000000  f8d02434          LDR      r2,[r0,#0x434]
;;;318    {
;;;319        pdma->TOUTEN &= ~u32Mask;
000004  438a              BICS     r2,r2,r1
000006  f8c02434          STR      r2,[r0,#0x434]
;;;320    }
00000a  4770              BX       lr
;;;321    
                          ENDP


                          AREA ||i.PDMA_EnableInt||, CODE, READONLY, ALIGN=1

                  PDMA_EnableInt PROC
;;;382     */
;;;383    void PDMA_EnableInt(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32Mask)
000000  2301              MOVS     r3,#1
;;;384    {
;;;385        switch(u32Mask)
;;;386        {
;;;387        case PDMA_INT_TRANS_DONE:
;;;388            pdma->INTEN |= (1ul << u32Ch);
000002  408b              LSLS     r3,r3,r1
000004  b14a              CBZ      r2,|L4.26|
000006  2a01              CMP      r2,#1                 ;385
000008  d00d              BEQ      |L4.38|
00000a  2a02              CMP      r2,#2                 ;385
00000c  d104              BNE      |L4.24|
;;;389            break;
;;;390        case PDMA_INT_TEMPTY:
;;;391            pdma->DSCT[u32Ch].CTL &= ~PDMA_DSCT_CTL_TBINTDIS_Msk;
;;;392            break;
;;;393        case PDMA_INT_TIMEOUT:
;;;394            pdma->TOUTIEN |= (1ul << u32Ch);
00000e  f8d01438          LDR      r1,[r0,#0x438]
000012  4319              ORRS     r1,r1,r3
000014  f8c01438          STR      r1,[r0,#0x438]
                  |L4.24|
;;;395            break;
;;;396    
;;;397        default:
;;;398            break;
;;;399        }
;;;400    }
000018  4770              BX       lr
                  |L4.26|
00001a  f8d01418          LDR      r1,[r0,#0x418]        ;388
00001e  4319              ORRS     r1,r1,r3              ;388
000020  f8c01418          STR      r1,[r0,#0x418]        ;388
000024  4770              BX       lr
                  |L4.38|
000026  eb001001          ADD      r0,r0,r1,LSL #4       ;391
00002a  6801              LDR      r1,[r0,#0]            ;391
00002c  f0210180          BIC      r1,r1,#0x80           ;391
000030  6001              STR      r1,[r0,#0]            ;391
000032  4770              BX       lr
;;;401    
                          ENDP


                          AREA ||i.PDMA_EnableTimeout||, CODE, READONLY, ALIGN=1

                  PDMA_EnableTimeout PROC
;;;300     */
;;;301    void PDMA_EnableTimeout(PDMA_T * pdma,uint32_t u32Mask)
000000  f8d02434          LDR      r2,[r0,#0x434]
;;;302    {
;;;303        pdma->TOUTEN |= u32Mask;
000004  430a              ORRS     r2,r2,r1
000006  f8c02434          STR      r2,[r0,#0x434]
;;;304    }
00000a  4770              BX       lr
;;;305    
                          ENDP


                          AREA ||i.PDMA_Open||, CODE, READONLY, ALIGN=2

                  PDMA_Open PROC
;;;36      */
;;;37     void PDMA_Open(PDMA_T * pdma,uint32_t u32Mask)
000000  b530              PUSH     {r4,r5,lr}
;;;38     {
;;;39         uint32_t i;
;;;40     
;;;41         for (i=0UL; i<PDMA_CH_MAX; i++)
000002  2200              MOVS     r2,#0
;;;42         {
;;;43             pdma->DSCT[i].CTL = 0UL;
;;;44             u32ChSelect[i] = PDMA_MEM;
000004  4c07              LDR      r4,|L6.36|
000006  4613              MOV      r3,r2                 ;41
                  |L6.8|
000008  eb001502          ADD      r5,r0,r2,LSL #4       ;43
00000c  602b              STR      r3,[r5,#0]            ;43
00000e  54a3              STRB     r3,[r4,r2]
000010  1c52              ADDS     r2,r2,#1
000012  2a10              CMP      r2,#0x10              ;41
000014  d3f8              BCC      |L6.8|
;;;45         }
;;;46     
;;;47         pdma->CHCTL |= u32Mask;
000016  f8d02400          LDR      r2,[r0,#0x400]
00001a  430a              ORRS     r2,r2,r1
00001c  f8c02400          STR      r2,[r0,#0x400]
;;;48     }
000020  bd30              POP      {r4,r5,pc}
;;;49     
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      ||.bss||

                          AREA ||i.PDMA_SetBurstType||, CODE, READONLY, ALIGN=1

                  PDMA_SetBurstType PROC
;;;283     */
;;;284    void PDMA_SetBurstType(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32BurstType, uint32_t u32BurstSize)
000000  eb001001          ADD      r0,r0,r1,LSL #4
;;;285    {
;;;286        pdma->DSCT[u32Ch].CTL &= ~(PDMA_DSCT_CTL_TXTYPE_Msk | PDMA_DSCT_CTL_BURSIZE_Msk);
000004  6801              LDR      r1,[r0,#0]
000006  f0210174          BIC      r1,r1,#0x74
00000a  6001              STR      r1,[r0,#0]
;;;287        pdma->DSCT[u32Ch].CTL |= (u32BurstType | u32BurstSize);
00000c  6801              LDR      r1,[r0,#0]
00000e  431a              ORRS     r2,r2,r3
000010  4311              ORRS     r1,r1,r2
000012  6001              STR      r1,[r0,#0]
;;;288    }
000014  4770              BX       lr
;;;289    
                          ENDP


                          AREA ||i.PDMA_SetStride||, CODE, READONLY, ALIGN=1

                  PDMA_SetStride PROC
;;;97      */
;;;98     void PDMA_SetStride(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32DestLen, uint32_t u32SrcLen, uint32_t u32TransCount)
000000  b570              PUSH     {r4-r6,lr}
;;;99     {
;;;100        pdma->DSCT[u32Ch].CTL |= PDMA_DSCT_CTL_STRIDEEN_Msk;
000002  eb001401          ADD      r4,r0,r1,LSL #4
000006  9d04              LDR      r5,[sp,#0x10]
000008  6826              LDR      r6,[r4,#0]
00000a  f4464600          ORR      r6,r6,#0x8000
00000e  6026              STR      r6,[r4,#0]
;;;101        pdma->STRIDE[u32Ch].ASOCR =(u32DestLen<<16) | u32SrcLen;
000010  eb0000c1          ADD      r0,r0,r1,LSL #3
000014  ea434202          ORR      r2,r3,r2,LSL #16
000018  f8c02504          STR      r2,[r0,#0x504]
;;;102        pdma->STRIDE[u32Ch].STCR = u32TransCount;
00001c  f8c05500          STR      r5,[r0,#0x500]
;;;103    }
000020  bd70              POP      {r4-r6,pc}
;;;104    
                          ENDP


                          AREA ||i.PDMA_SetTimeOut||, CODE, READONLY, ALIGN=1

                  PDMA_SetTimeOut PROC
;;;334     */
;;;335    void PDMA_SetTimeOut(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32OnOff, uint32_t u32TimeOutCnt)
000000  b141              CBZ      r1,|L9.20|
;;;336    {
;;;337        switch(u32Ch)
000002  2901              CMP      r1,#1
000004  d105              BNE      |L9.18|
;;;338        {
;;;339        case 0ul:
;;;340            pdma->TOC0_1 = (pdma->TOC0_1 & ~PDMA_TOC0_1_TOC0_Msk) | u32TimeOutCnt;
;;;341            break;
;;;342        case 1ul:
;;;343            pdma->TOC0_1 = (pdma->TOC0_1 & ~PDMA_TOC0_1_TOC1_Msk) | (u32TimeOutCnt << PDMA_TOC0_1_TOC1_Pos);
000006  f8d01440          LDR      r1,[r0,#0x440]
00000a  f363411f          BFI      r1,r3,#16,#16
                  |L9.14|
00000e  f8c01440          STR      r1,[r0,#0x440]
                  |L9.18|
;;;344            break;
;;;345        default:
;;;346            break;
;;;347        }
;;;348    }
000012  4770              BX       lr
                  |L9.20|
000014  f8d01440          LDR      r1,[r0,#0x440]        ;340
000018  f36f010f          BFC      r1,#0,#16             ;340
00001c  4319              ORRS     r1,r1,r3              ;340
00001e  e7f6              B        |L9.14|
;;;349    
                          ENDP


                          AREA ||i.PDMA_SetTransferAddr||, CODE, READONLY, ALIGN=1

                  PDMA_SetTransferAddr PROC
;;;122     */
;;;123    void PDMA_SetTransferAddr(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32SrcAddr, uint32_t u32SrcCtrl, uint32_t u32DstAddr, uint32_t u32DstCtrl)
000000  b530              PUSH     {r4,r5,lr}
;;;124    {
;;;125        pdma->DSCT[u32Ch].SA = u32SrcAddr;
000002  eb001001          ADD      r0,r0,r1,LSL #4
000006  e9dd4503          LDRD     r4,r5,[sp,#0xc]       ;124
00000a  6042              STR      r2,[r0,#4]
;;;126        pdma->DSCT[u32Ch].DA = u32DstAddr;
00000c  6084              STR      r4,[r0,#8]
;;;127        pdma->DSCT[u32Ch].CTL &= ~(PDMA_DSCT_CTL_SAINC_Msk | PDMA_DSCT_CTL_DAINC_Msk);
00000e  6801              LDR      r1,[r0,#0]
000010  f4216170          BIC      r1,r1,#0xf00
000014  6001              STR      r1,[r0,#0]
;;;128        pdma->DSCT[u32Ch].CTL |= (u32SrcCtrl | u32DstCtrl);
000016  6801              LDR      r1,[r0,#0]
000018  432b              ORRS     r3,r3,r5
00001a  4319              ORRS     r1,r1,r3
00001c  6001              STR      r1,[r0,#0]
;;;129    }
00001e  bd30              POP      {r4,r5,pc}
;;;130    
                          ENDP


                          AREA ||i.PDMA_SetTransferCnt||, CODE, READONLY, ALIGN=2

                  PDMA_SetTransferCnt PROC
;;;78      */
;;;79     void PDMA_SetTransferCnt(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32Width, uint32_t u32TransCount)
000000  b510              PUSH     {r4,lr}
;;;80     {
;;;81         pdma->DSCT[u32Ch].CTL &= ~(PDMA_DSCT_CTL_TXCNT_Msk | PDMA_DSCT_CTL_TXWIDTH_Msk);
000002  eb001001          ADD      r0,r0,r1,LSL #4
000006  6801              LDR      r1,[r0,#0]
000008  f64c74ff          MOV      r4,#0xcfff
00000c  4021              ANDS     r1,r1,r4
00000e  6001              STR      r1,[r0,#0]
;;;82         pdma->DSCT[u32Ch].CTL |= (u32Width | ((u32TransCount - 1UL) << PDMA_DSCT_CTL_TXCNT_Pos));
000010  6801              LDR      r1,[r0,#0]
000012  4c03              LDR      r4,|L11.32|
000014  eb044303          ADD      r3,r4,r3,LSL #16
000018  4313              ORRS     r3,r3,r2
00001a  4319              ORRS     r1,r1,r3
00001c  6001              STR      r1,[r0,#0]
;;;83     }
00001e  bd10              POP      {r4,pc}
;;;84     
                          ENDP

                  |L11.32|
                          DCD      0xffff0000

                          AREA ||i.PDMA_SetTransferMode||, CODE, READONLY, ALIGN=2

                  PDMA_SetTransferMode PROC
;;;193     */
;;;194    void PDMA_SetTransferMode(PDMA_T * pdma,uint32_t u32Ch, uint32_t u32Peripheral, uint32_t u32ScatterEn, uint32_t u32DescAddr)
000000  b530              PUSH     {r4,r5,lr}
;;;195    {
;;;196        u32ChSelect[u32Ch] = u32Peripheral;
000002  4d4d              LDR      r5,|L12.312|
000004  9c03              LDR      r4,[sp,#0xc]
;;;197        switch(u32Ch)
000006  2910              CMP      r1,#0x10
000008  546a              STRB     r2,[r5,r1]            ;196
00000a  d27d              BCS      |L12.264|
00000c  e8dff001          TBB      [pc,r1]
000010  08101720          DCB      0x08,0x10,0x17,0x20
000014  272f363f          DCB      0x27,0x2f,0x36,0x3f
000018  464e555e          DCB      0x46,0x4e,0x55,0x5e
00001c  656d7489          DCB      0x65,0x6d,0x74,0x89
;;;198        {
;;;199        case 0ul:
;;;200            pdma->REQSEL0_3 = (pdma->REQSEL0_3 & ~PDMA_REQSEL0_3_REQSRC0_Msk) | u32Peripheral;
000020  f8d05480          LDR      r5,[r0,#0x480]
000024  f025057f          BIC      r5,r5,#0x7f
000028  4315              ORRS     r5,r5,r2
00002a  f8c05480          STR      r5,[r0,#0x480]
;;;201            break;
00002e  e06b              B        |L12.264|
;;;202        case 1ul:
;;;203            pdma->REQSEL0_3 = (pdma->REQSEL0_3 & ~PDMA_REQSEL0_3_REQSRC1_Msk) | (u32Peripheral << PDMA_REQSEL0_3_REQSRC1_Pos);
000030  f8d05480          LDR      r5,[r0,#0x480]
000034  f42545fe          BIC      r5,r5,#0x7f00
000038  ea452202          ORR      r2,r5,r2,LSL #8
;;;204            break;
00003c  e005              B        |L12.74|
;;;205        case 2ul:
;;;206            pdma->REQSEL0_3 = (pdma->REQSEL0_3 & ~PDMA_REQSEL0_3_REQSRC2_Msk) | (u32Peripheral << PDMA_REQSEL0_3_REQSRC2_Pos);
00003e  f8d05480          LDR      r5,[r0,#0x480]
000042  f42505fe          BIC      r5,r5,#0x7f0000
000046  ea454202          ORR      r2,r5,r2,LSL #16
                  |L12.74|
00004a  f8c02480          STR      r2,[r0,#0x480]        ;203
00004e  e05b              B        |L12.264|
;;;207            break;
;;;208        case 3ul:
;;;209            pdma->REQSEL0_3 = (pdma->REQSEL0_3 & ~PDMA_REQSEL0_3_REQSRC3_Msk) | (u32Peripheral << PDMA_REQSEL0_3_REQSRC3_Pos);
000050  f8d05480          LDR      r5,[r0,#0x480]
000054  f02545fe          BIC      r5,r5,#0x7f000000
000058  ea456202          ORR      r2,r5,r2,LSL #24
;;;210            break;
00005c  e7f5              B        |L12.74|
;;;211        case 4ul:
;;;212            pdma->REQSEL4_7 = (pdma->REQSEL4_7 & ~PDMA_REQSEL4_7_REQSRC4_Msk) | u32Peripheral;
00005e  f8d05484          LDR      r5,[r0,#0x484]
000062  f025057f          BIC      r5,r5,#0x7f
000066  4315              ORRS     r5,r5,r2
000068  f8c05484          STR      r5,[r0,#0x484]
;;;213            break;
00006c  e04c              B        |L12.264|
;;;214        case 5ul:
;;;215            pdma->REQSEL4_7 = (pdma->REQSEL4_7 & ~PDMA_REQSEL4_7_REQSRC5_Msk) | (u32Peripheral << PDMA_REQSEL4_7_REQSRC5_Pos);
00006e  f8d05484          LDR      r5,[r0,#0x484]
000072  f42545fe          BIC      r5,r5,#0x7f00
000076  ea452202          ORR      r2,r5,r2,LSL #8
;;;216            break;
00007a  e005              B        |L12.136|
;;;217        case 6ul:
;;;218            pdma->REQSEL4_7 = (pdma->REQSEL4_7 & ~PDMA_REQSEL4_7_REQSRC6_Msk) | (u32Peripheral << PDMA_REQSEL4_7_REQSRC6_Pos);
00007c  f8d05484          LDR      r5,[r0,#0x484]
000080  f42505fe          BIC      r5,r5,#0x7f0000
000084  ea454202          ORR      r2,r5,r2,LSL #16
                  |L12.136|
000088  f8c02484          STR      r2,[r0,#0x484]        ;215
00008c  e03c              B        |L12.264|
;;;219            break;
;;;220        case 7ul:
;;;221            pdma->REQSEL4_7 = (pdma->REQSEL4_7 & ~PDMA_REQSEL4_7_REQSRC7_Msk) | (u32Peripheral << PDMA_REQSEL4_7_REQSRC7_Pos);
00008e  f8d05484          LDR      r5,[r0,#0x484]
000092  f02545fe          BIC      r5,r5,#0x7f000000
000096  ea456202          ORR      r2,r5,r2,LSL #24
;;;222            break;
00009a  e7f5              B        |L12.136|
;;;223        case 8ul:
;;;224            pdma->REQSEL8_11 = (pdma->REQSEL8_11 & ~PDMA_REQSEL8_11_REQSRC8_Msk) | u32Peripheral;
00009c  f8d05488          LDR      r5,[r0,#0x488]
0000a0  f025057f          BIC      r5,r5,#0x7f
0000a4  4315              ORRS     r5,r5,r2
0000a6  f8c05488          STR      r5,[r0,#0x488]
;;;225            break;
0000aa  e02d              B        |L12.264|
;;;226        case 9ul:
;;;227            pdma->REQSEL8_11 = (pdma->REQSEL8_11 & ~PDMA_REQSEL8_11_REQSRC9_Msk) | (u32Peripheral << PDMA_REQSEL8_11_REQSRC9_Pos);
0000ac  f8d05488          LDR      r5,[r0,#0x488]
0000b0  f42545fe          BIC      r5,r5,#0x7f00
0000b4  ea452202          ORR      r2,r5,r2,LSL #8
;;;228            break;
0000b8  e005              B        |L12.198|
;;;229        case 10ul:
;;;230            pdma->REQSEL8_11 = (pdma->REQSEL8_11 & ~PDMA_REQSEL8_11_REQSRC10_Msk) | (u32Peripheral << PDMA_REQSEL8_11_REQSRC10_Pos);
0000ba  f8d05488          LDR      r5,[r0,#0x488]
0000be  f42505fe          BIC      r5,r5,#0x7f0000
0000c2  ea454202          ORR      r2,r5,r2,LSL #16
                  |L12.198|
0000c6  f8c02488          STR      r2,[r0,#0x488]        ;227
0000ca  e01d              B        |L12.264|
;;;231            break;
;;;232        case 11ul:
;;;233            pdma->REQSEL8_11 = (pdma->REQSEL8_11 & ~PDMA_REQSEL8_11_REQSRC11_Msk) | (u32Peripheral << PDMA_REQSEL8_11_REQSRC11_Pos);
0000cc  f8d05488          LDR      r5,[r0,#0x488]
0000d0  f02545fe          BIC      r5,r5,#0x7f000000
0000d4  ea456202          ORR      r2,r5,r2,LSL #24
;;;234            break;
0000d8  e7f5              B        |L12.198|
;;;235        case 12ul:
;;;236            pdma->REQSEL12_15 = (pdma->REQSEL12_15 & ~PDMA_REQSEL12_15_REQSRC12_Msk) | u32Peripheral;
0000da  f8d0548c          LDR      r5,[r0,#0x48c]
0000de  f025057f          BIC      r5,r5,#0x7f
0000e2  4315              ORRS     r5,r5,r2
0000e4  f8c0548c          STR      r5,[r0,#0x48c]
;;;237            break;
0000e8  e00e              B        |L12.264|
;;;238        case 13ul:
;;;239            pdma->REQSEL12_15 = (pdma->REQSEL12_15 & ~PDMA_REQSEL12_15_REQSRC13_Msk) | (u32Peripheral << PDMA_REQSEL12_15_REQSRC13_Pos);
0000ea  f8d0548c          LDR      r5,[r0,#0x48c]
0000ee  f42545fe          BIC      r5,r5,#0x7f00
0000f2  ea452202          ORR      r2,r5,r2,LSL #8
;;;240            break;
0000f6  e005              B        |L12.260|
;;;241        case 14ul:
;;;242            pdma->REQSEL12_15 = (pdma->REQSEL12_15 & ~PDMA_REQSEL12_15_REQSRC14_Msk) | (u32Peripheral << PDMA_REQSEL12_15_REQSRC14_Pos);
0000f8  f8d0548c          LDR      r5,[r0,#0x48c]
0000fc  f42505fe          BIC      r5,r5,#0x7f0000
000100  ea454202          ORR      r2,r5,r2,LSL #16
                  |L12.260|
000104  f8c0248c          STR      r2,[r0,#0x48c]        ;239
                  |L12.264|
;;;243            break;
;;;244        case 15ul:
;;;245            pdma->REQSEL12_15 = (pdma->REQSEL12_15 & ~PDMA_REQSEL12_15_REQSRC15_Msk) | (u32Peripheral << PDMA_REQSEL12_15_REQSRC15_Pos);
;;;246            break;
;;;247        default:
;;;248            break;
;;;249        }
;;;250    
;;;251        if(u32ScatterEn)
;;;252        {
;;;253            pdma->DSCT[u32Ch].CTL = (pdma->DSCT[u32Ch].CTL & ~PDMA_DSCT_CTL_OPMODE_Msk) | PDMA_OP_SCATTER;
000108  eb001001          ADD      r0,r0,r1,LSL #4
;;;254            pdma->DSCT[u32Ch].NEXT = u32DescAddr - (PDMA->SCATBA);
;;;255        }
;;;256        else
;;;257        {
;;;258            pdma->DSCT[u32Ch].CTL = (pdma->DSCT[u32Ch].CTL & ~PDMA_DSCT_CTL_OPMODE_Msk) | PDMA_OP_BASIC;
00010c  6801              LDR      r1,[r0,#0]
00010e  f0210103          BIC      r1,r1,#3
000112  b16b              CBZ      r3,|L12.304|
000114  1c89              ADDS     r1,r1,#2              ;251
000116  6001              STR      r1,[r0,#0]            ;253
000118  4908              LDR      r1,|L12.316|
00011a  6809              LDR      r1,[r1,#0]            ;254
00011c  1a61              SUBS     r1,r4,r1              ;254
00011e  60c1              STR      r1,[r0,#0xc]          ;254
;;;259        }
;;;260    }
000120  bd30              POP      {r4,r5,pc}
000122  f8d0548c          LDR      r5,[r0,#0x48c]        ;245
000126  f02545fe          BIC      r5,r5,#0x7f000000     ;245
00012a  ea456202          ORR      r2,r5,r2,LSL #24      ;245
00012e  e7e9              B        |L12.260|
                  |L12.304|
000130  1c49              ADDS     r1,r1,#1              ;246
000132  6001              STR      r1,[r0,#0]            ;258
000134  bd30              POP      {r4,r5,pc}
;;;261    
                          ENDP

000136  0000              DCW      0x0000
                  |L12.312|
                          DCD      ||.bss||
                  |L12.316|
                          DCD      0x4000843c

                          AREA ||i.PDMA_Trigger||, CODE, READONLY, ALIGN=2

                  PDMA_Trigger PROC
;;;359     */
;;;360    void PDMA_Trigger(PDMA_T * pdma,uint32_t u32Ch)
000000  4a04              LDR      r2,|L13.20|
;;;361    {
;;;362        if(u32ChSelect[u32Ch] == PDMA_MEM)
000002  5c52              LDRB     r2,[r2,r1]
000004  2a00              CMP      r2,#0                 ;361
000006  d103              BNE      |L13.16|
;;;363        {
;;;364            pdma->SWREQ = (1ul << u32Ch);
000008  2201              MOVS     r2,#1
00000a  408a              LSLS     r2,r2,r1
00000c  f8c02408          STR      r2,[r0,#0x408]
                  |L13.16|
;;;365        }
;;;366        else {}
;;;367    }
000010  4770              BX       lr
;;;368    
                          ENDP

000012  0000              DCW      0x0000
                  |L13.20|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  u32ChSelect
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\pdma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_pdma_c_4711ff23____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_pdma_c_4711ff23____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_pdma_c_4711ff23____REVSH|
#line 402
|__asm___6_pdma_c_4711ff23____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_pdma_c_4711ff23____RRX|
#line 587
|__asm___6_pdma_c_4711ff23____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
